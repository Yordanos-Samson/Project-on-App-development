/* main.dart*/
import 'package:flutter/animation.dart';
import 'package:flutter/material.dart';
import 'Word.dart';

void main() {//async{
//   await Hive.initFlutter();
//   var box = await Hive.openBox('testBox');
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Dictionary',
      theme: ThemeData(

        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),
        useMaterial3: true,
      ),
      home: const MyHomePage(title: 'English to Amharic Dictionary'),
    );
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({super.key, required this.title});


  final String title;

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {

 List<Word> Listofwords = [
   Word("word","mesi",false),
   Word("dictionary","walter",false),
   Word("country","gech",false),
   Word("time","yordi",false),
   Word("me","mer",false),
 ];
  void _incrementCounter() {
    setState(() {

    });
  }

  @override
  Widget build(BuildContext context) {

    return Scaffold(
      appBar: AppBar(

        backgroundColor:Colors.teal,
        // Here we take the value from the MyHomePage object that was created by
        // the App.build method, and use it to set our appbar title.
        title:Text(widget.title,
          style:const TextStyle(color:Colors.white),
        ),

      ),
      body: ListView.builder(
        itemCount: Listofwords.length,
        itemBuilder: (context,index){
          return ListTile(

          title: Text("${Listofwords[index].words_en}"),
    subtitle: Text("${Listofwords[index].words_am}"),
    leading: Icon(Icons.volume_up),
    trailing: Listofwords[index].fav?Icon(Icons.favorite):Icon(Icons.favorite_border),

          onTap: (){
            setState(() {
              Listofwords[index].fav = !Listofwords[index].fav;
              // if(Listofwords[index].fav){
              //   Listofwords[index].fav=false;
              // }
              // else{
              //   Listofwords[index].fav=true;
              // }
            });


          },


    );
    }

    ),

        // Center is
    ); // This trailing comma makes auto-formatting nicer for build methods.

  }
}
class Word{
  String words_en;
  String words_am;
  bool fav;
  Word(this.words_en,this.words_am,this.fav);
}
